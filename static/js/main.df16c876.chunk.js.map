{"version":3,"sources":["Component/AddTask/AddTask.jsx","Component/Button/Button.jsx","Component/Header/Header.jsx","Component/EachTask/EachTask.jsx","Component/Task/Task.jsx","Component/App/App.jsx","index.js"],"names":["AddTask","addTask","useState","text","setText","day","setDay","reminder","setReminder","className","onSubmit","e","preventDefault","alert","htmlFor","value","onChange","target","type","placeholder","checked","currentTarget","Button","color","onClick","style","backgroundColor","defaultProps","Header","Title","onAdd","showAdd","EachTask","task","deleteTask","onTogleRemainder","onDoubleClick","id","Task","onTogleReminder","map","App","showAddTask","setshowAddTask","setTask","tasks","Math","floor","random","newTask","console","log","length","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df16c876.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport './AddTask.css'\r\n\r\nconst AddTask = ({addTask}) => {\r\n    const [text,setText]=useState('')\r\n    const [day,setDay]=useState('')\r\n    const [reminder,setReminder]=useState(false)\r\n\r\nconst onSubmit =(e)=>{\r\n    e.preventDefault()\r\n    if(!text){\r\n        alert('please add a task')\r\n        return\r\n    }\r\n    \r\naddTask({text,day,reminder})\r\nsetText('')\r\nsetDay('')\r\nsetReminder(false)\r\n\r\n\r\n}\r\n\r\n    return (\r\n        <form className=\"add-form\" onSubmit={onSubmit}>\r\n            <div className=\"form-control\">\r\n                <label htmlFor=\"task\">Task</label>       \r\n                <input value={text} onChange={(e)=>setText(e.target.value)} type=\"text\"  placeholder=\"Add-Task\"/>\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label htmlFor=\"Day\">Day and Time</label>\r\n                <input value={day} onChange={(e)=>setDay(e.target.value)} type=\"text\"  placeholder=\"Add-Day and Time\"/>\r\n            </div>\r\n            <div className=\"form-control form-control-check\">\r\n                <label htmlFor=\"task\">Set-Reminder</label>\r\n                <input value={reminder} checked={reminder} onChange={(e)=>setReminder(e.currentTarget.checked)} type=\"checkbox\"  placeholder=\"Add-Reminder\"/>\r\n            </div>\r\n            <input className=\"btn btn-block\" type=\"submit\" value=\"Save-Task\"/>\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import PropTypes from 'prop-types'\r\n\r\nimport './Button.css'\r\nconst Button = ({color,text,onClick}) => {\r\n   \r\n    return (\r\n        <div>\r\n             <button onClick={onClick} style={{backgroundColor:color}} className=\"btn\">\r\n                 {text}\r\n                \r\n             </button>\r\n            \r\n        </div>\r\n    )\r\n}\r\nButton.defaultProps ={\r\n   color:\"green\",\r\n   text:\"Add\"\r\n}\r\nButton.propTypes={\r\n    color:PropTypes.string,\r\n    text:PropTypes.string,\r\n    onClick:PropTypes.func\r\n}\r\nexport default Button\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './Header.css'\r\nimport Button from '../Button/Button'\r\nconst Header = ({Title,onAdd,showAdd}) => {\r\n    \r\n    return (\r\n        <header className=\"header\">\r\n          <h1>  {Title}</h1>\r\n          <Button  color={showAdd ? \"red\" : \"green\"} text={showAdd ? \"close\" : \"Add\"} onClick={onAdd}/>\r\n         \r\n        \r\n         \r\n\r\n        </header>\r\n    )\r\n}\r\nHeader.defaultProps ={\r\n    Title :\"Task Tracker\"\r\n}\r\nHeader.propTypes={\r\n    Title:PropTypes.string.isRequired,\r\n}\r\nexport default Header\r\n","import './EachTask.css'\r\nconst EachTask = ({task,deleteTask,onTogleRemainder}) => {\r\n    \r\n//  let remainderStatus =task.remainder;\r\n \r\n//  let remainderClass;\r\n\r\n//  if(remainderStatus){\r\n//     remainderClass=\"task-reminder\"\r\n// }\r\n\r\n// else{\r\n//     remainderClass=\"task\"\r\n\r\n// }\r\n\r\n  \r\n    return (\r\n        \r\n        <div className={`task ${task.reminder ?'reminder':'' }`} onDoubleClick={()=>onTogleRemainder(task.id)}>\r\n            <h3>{task.text} <button onClick={()=>deleteTask(task.id)} className=\"btn2\">X</button></h3>\r\n            <p>{task.day}</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EachTask\r\n","\r\n\r\nimport EachTask from \"../EachTask/EachTask\"\r\nimport \"./Task.css\"\r\n \r\nconst Task = ({task,deleteTask ,onTogleReminder}) => {\r\n   \r\n    return (\r\n      \r\n        <>\r\n        {task.map((task)=>\r\n            \r\n        <EachTask onTogleRemainder={onTogleReminder} deleteTask={deleteTask} key={task.id} task={task}/>\r\n        )}\r\n            \r\n        </>\r\n      \r\n    )\r\n}\r\n\r\nexport default Task\r\n","import {useState} from 'react'\r\nimport AddTask from '../AddTask/AddTask'\r\nimport Header from '../Header/Header'\r\nimport Task from '../Task/Task'\r\nimport './App.css'\r\nconst App = () => {\r\n\r\n    const [showAddTask,setshowAddTask]=useState(false)\r\n\r\n    const [task,setTask] =useState([\r\n        {\r\n            \"id\":1,\r\n            \"text\":\"Dctors appointment\",\r\n            \"day\":\"feb 5th\",\r\n            \"reminder\":true\r\n        },\r\n        {\r\n            \"id\":2,\r\n            \"text\":\"meeting at school\",\r\n            \"day\":\"sep 5th\",\r\n            \"reminder\":true\r\n        },\r\n        {\r\n            \"id\":3,\r\n            \"text\":\"Food Delivary\",\r\n            \"day\":\"oct 5th\",\r\n            \"reminder\":false\r\n        }])\r\n\r\n  //===================>Add Task<======================= \r\nconst addTask = (tasks) =>{\r\n   \r\n    const id =Math.floor(Math.random()*1000)+1;\r\n    const newTask ={id,...tasks}\r\n    // console.log(newTask);\r\n    console.log([...task,newTask]);\r\n    setTask([...task,newTask])\r\n}\r\n//===================>End Of Add Task<=======================\r\n\r\n\r\n//===================>Delete Task<=======================\r\n\r\n        const deleteTask = (id) =>{\r\n            setTask(task.filter((task)=> task.id !== id ))\r\n            \r\n        }\r\n//==========================>End Of Delete Task<================\r\n\r\n\r\n          \r\n//===================>remindering The Task<=======================\r\n        const doubleClickreminder = (id)=>{\r\n           setTask(task.map((task)=>task.id === id ? {...task, reminder:!task.reminder } : task))\r\n       \r\n        }\r\n          \r\n//===================>End Of remindering The Task<=======================\r\n    return (\r\n        <div className=\"container\">\r\n           <Header showAdd={showAddTask} onAdd={()=>setshowAddTask(!showAddTask)}/>\r\n         {showAddTask &&  <AddTask addTask={addTask}/>}\r\n        { task.length ?  <Task deleteTask={deleteTask} task={task}  onTogleReminder={doubleClickreminder} /> : <p style = {{color:\"red\"}}>Empty Task</p>}\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './Component/App/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}